#version 150
#extension GL_ARB_explicit_attrib_location : enable
uniform vec3 f3LightPos;
uniform vec3 f3LightColor;
uniform float fBrightness;
uniform vec3 f3CameraPos;
uniform sampler2D t2Texture;

in vec3 fPosition;
in vec3 fNormal;
in vec2 UV;
layout(location=0) out vec4 diffuseColor;
void main()
{
	vec3 normalDir=normalize(fNormal);
	vec3 viewDir=normalize(fPosition-f3CameraPos);
	vec3 lightDir=normalize(fPosition-f3LightPos);
	vec3 lighting=f3LightColor * dot(normalDir, lightDir) * fBrightness;
	vec3 hn=normalize(viewDir+lightDir);
	float specular=pow(dot(normalDir, hn), 55.0);
	diffuseColor=texture2D(t2Texture,UV.st)*vec4(lighting, 1);
			//+vec4(specular, specular, specular, 0);
}