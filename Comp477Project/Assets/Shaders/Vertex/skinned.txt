attribute vec3 position;
attribute vec2 texCoord;
attribute vec3 normal;

uniform mat4 mWorld;
uniform mat4 mView;
uniform mat4 mProjection;

uniform mat4 mWeights1;
uniform mat4 mWeights2;
uniform mat4 maBoneTransforms[18];
varying vec3 fNormal;
varying vec3 fPosition;
float getWeight(int id)
{
	int i=id % 16;
	int j=i / 4;
	int k=i % 4;
	float result;
	if(id<16)
		result=mWeights1[j][k];
	else result=mWeights2[j][k];
	return result;
}
void main()
{
	mat4 skinWorld=mat4(0);
	for(int i=0;i<18;i++)
	  skinWorld+=maBoneTransforms[i]*getWeight(i);
	skinWorld/=18.0f;
	//mat4 mModelView = mView * mWorld;
	vec4 pos = mWorld * skinWorld * vec4(position, 1.0);
	//mat3 mWorldInvTrans=mat3(mWorld);
	fNormal = normal;//mWorldInvTrans * normal;
	fPosition = pos.xyz;
	gl_Position = mProjection * mView * pos;
	gl_TexCoord[0] = vec4(texCoord, 0, 1);
}