Scene
{
	//////////////
	// Textures //
	//////////////
	Texture2D barrelTexture
	(
		"Data/Images/Barrel.png"		// Image filename
	);

	Texture2D tableTexture
	(
		"Data/Images/Table.png"			// Image filename
	);

	Texture2D grassTexture
	(
		"Data/Images/Grass.png"			// Image filename
	);

	CubeMap environmentCubeMap
	(
		"Data/Images/Mountains/"		// Images path
	);

	///////////////
	// Materials //
	///////////////
	EnvironmentMaterial environmentMaterial
	(
		environmentCubeMap
	);

	BlinnPhongMaterial tableMaterial
	(
		Color(0.8, 0.8, 0.8, 1.0),		// Surface
		Color(0.8, 0.8, 0.8, 1.0),		// Ambient
		Color(0.95, 0.95, 0.95, 1.0),	// Diffuse
		Color(0.05, 0.05, 0.05, 1.0),	// Specular
		Color(0.0, 0.0, 0.0, 1.0),		// Metallic
		Color(0.05, 0.05, 0.05, 1.0),	// Reflection
		Color(0.0, 0.0, 0.0, 1.0),		// Refraction
		1.0,							// Refraction index
		16.0,							// Shininess
		false,							// Wireframe
		tableTexture,					// 2D texture name
		NULL							// Cubemap name for reflection/refraction)
	);

	BlinnPhongMaterial grassMaterial
	(
		Color(0.8, 0.8, 0.8, 1.0),		// Surface
		Color(0.8, 0.8, 0.8, 1.0),		// Ambient
		Color(1.0, 1.0, 1.0, 1.0),		// Diffuse
		Color(0.0, 0.0, 0.0, 1.0),		// Specular
		Color(0.0, 0.0, 0.0, 1.0),		// Metallic
		Color(0.0, 0.0, 0.0, 1.0),		// Reflection
		Color(0.0, 0.0, 0.0, 1.0),		// Refraction
		1.0,							// Refraction index
		16.0,							// Shininess
		false,							// Wireframe
		grassTexture,					// 2D texture name
		NULL							// Cubemap name for reflection/refraction)
	);

	BlinnPhongMaterial barrelMaterial
	(
		Color(0.8, 0.8, 0.8, 1.0),		// Surface
		Color(0.8, 0.8, 0.8, 1.0),		// Ambient
		Color(1.0, 1.0, 1.0, 1.0),		// Diffuse
		Color(0.0, 0.0, 0.0, 1.0),		// Specular
		Color(0.0, 0.0, 0.0, 1.0),		// Metallic
		Color(0.0, 0.0, 0.0, 1.0),		// Reflection
		Color(0.0, 0.0, 0.0, 1.0),		// Refraction
		1.0,							// Refraction index
		16.0,							// Shininess
		false,							// Wireframe
		barrelTexture,					// 2D texture name
		NULL							// Cubemap name for reflection/refraction)
	);

	BlinnPhongMaterial liquidMaterial
	(
		Color(1.0, 1.0, 1.0, 1.0),		// Surface
		Color(0.0, 0.0, 0.0, 1.0),		// Ambient
		Color(0.0, 0.0, 0.0, 1.0),		// Diffuse
		Color(0.05, 0.05, 0.05, 1.0),	// Specular
		Color(0.0, 0.0, 0.0, 1.0),		// Metallic
		Color(0.0, 0.0, 0.0, 1.0),		// Reflection
		Color(1.0, 1.0, 0.0, 1.0),		// Refraction
		1.333,							// Refraction index
		16.0,							// Shininess
		false,							// Wireframe
		NULL,							// 2D texture name
		environmentCubeMap				// Cubemap name for reflection/refraction)
	);

	BlinnPhongMaterial glassMaterial
	(
		Color(1.0, 1.0, 1.0, 1.0),		// Surface
		Color(0.0, 0.0, 0.0, 1.0),		// Ambient
		Color(0.05, 0.05, 0.05, 1.0),	// Diffuse
		Color(0.05, 0.05, 0.05, 1.0),	// Specular
		Color(0.0, 0.0, 0.0, 1.0),		// Metallic
		Color(0.1, 0.1, 0.1, 1.0),		// Reflection
		Color(1.0, 1.0, 1.0, 1.0),		// Refraction
		1.42,							// Refraction index
		16.0,							// Shininess
		false,							// Wireframe
		NULL,							// 2D texture name
		environmentCubeMap				// Cubemap name for reflection/refraction)
	);

	///////////
	// Nodes //
	///////////
	Node sceneGraphRoot
	(
		NULL,				// Parent (no parent)
		Transformation()	// Transformation
	);

	Box skyBox
	(
		sceneGraphRoot,					// Parent
		Transformation(),				// Transformation
		environmentMaterial,			// Material name
		true,							// IsVisible?
		150, 150, 150					// Size X/Y/Z
	);

	TriMesh table
	(
		sceneGraphRoot,					// Parent
		Transformation(					// Transformation
			Vector3(0, 0, 0),			// Rotation X/Y/Z
			Vector3(0, -1.5, -1.8),			// Translation
			Vector3(2, 2, 2) ),			// Scaling
		tableMaterial,					// Material name
		true,							// IsVisible?
		"Data/Geometries/Table.obj"		// Filename
	);

	TriMesh grass
	(
		sceneGraphRoot,					// Parent
		Transformation(					// Transformation
			Vector3(0, 0, 0),			// Rotation X/Y/Z
			Vector3(0, -2.58, 0),		// Translation
			Vector3(2, 2, 2) ),			// Scaling
		grassMaterial,					// Material name
		true,							// IsVisible?
		"Data/Geometries/Grass.obj"		// Filename
	);

	TriMesh barrel
	(
		sceneGraphRoot,					// Parent
		Transformation(					// Transformation
			Vector3(0, 0, 0),			// Rotation X/Y/Z
			Vector3(0, 0, 0),			// Translation
			Vector3(1, 1, 1) ),			// Scaling
		barrelMaterial,					// Material name
		true,							// IsVisible?
		"Data/Geometries/Barrel.obj"	// Filename
	);

	TriMesh glass
	(
		barrel,							// Parent
		Transformation(					// Transformation
			Vector3(0, 0, 0),			// Rotation X/Y/Z
			Vector3(0, -0.8, 1.12),			// Translation
			Vector3(0.2, 0.3, 0.2) ),			// Scaling
		glassMaterial,					// Material name
		true,							// IsVisible?
		"Data/Geometries/Glass.obj"		// Filename
	);

	TriMesh liquid
	(
		glass,							// Parent
		Transformation(					// Transformation
			Vector3(0, 0, 0),			// Rotation X/Y/Z
			Vector3(0, 0, 0),			// Translation
			Vector3(1, 1, 1) ),			// Scaling
		liquidMaterial,					// Material name
		true,							// IsVisible?
		"Data/Geometries/Liquid.obj"	// Filename
	);

	////////////
	// Camera //
	////////////
	TurntableCamera turntableCamera
	(
		sceneGraphRoot,		// Parent
		Transformation(),	// Transformation
		0.7854,				// Field of view (45 degrees == PI/4)
		0.1,				// Near clipping plane
		200.0,				// Far clipping plane
		1.0,				// Focal distance
		0.0,				// Lens radius (no depth of field)
		Vector3(0, 0, 0),	// Look-at center
		Vector3(0, 1, 0),	// Theta Axis
		Vector3(1, 0, 0),	// Phi Axis
		-0.7854,			// Rotation Theta
		0.0,				// Rotation Phi
		3.0					// Distance
	);

	////////////
	// Lights //
	////////////
	PointLight light1
	(
		sceneGraphRoot,				// Parent (no parent)
		Transformation( Vector3(), Vector3(65, 65, -74), Vector3(1,1,1)),	// Transformation
		Color(10000, 10000, 10000, 1),	// Intensity
		Color(0.1, 0.1, 0.1, 1) 	// Ambient
	);

	PointLight light2
	(
		sceneGraphRoot,				// Parent (no parent)
		Transformation( Vector3(), Vector3(-35, 65, 74), Vector3(1,1,1)),	// Transformation
		Color(25000, 25000, 25000, 1),	// Intensity
		Color(0.1, 0.1, 0.1, 1) 	// Ambient
	);

	////////////////
	// Scene info //
	////////////////
	SceneInfo
	(
		Color(1, 1, 1, 1.0),	// Background color
		turntableCamera,		// Active camera name
		sceneGraphRoot			// Scene graph root
	);
};



